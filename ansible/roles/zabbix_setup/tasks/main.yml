- name: "Download zabbix with wget"
  command: "wget https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu20.04_all.deb -O /tmp/zabbix.deb"

- name: "Change execution"
  command: "chmod +x /tmp/zabbix.deb"

- name: "install zabbix with dpkg"
  command: "dpkg -i /tmp/zabbix.deb"

- name: "apt update"
  command: "apt update"

- name: "Install a package through apt"
  apt:
    name:
      [
        python3-pip,
        mysql-server-8.0,
        zabbix-server-mysql,
        zabbix-frontend-php,
        zabbix-apache-conf,
        zabbix-sql-scripts,
        zabbix-agent,
      ]
    state: present
    update_cache: yes

- name: "pip install PyMySQL"
  command: "pip install PyMySQL"

- name: "Create root user"
  become: true
  community.mysql.mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: password
    name: root
    password: "{{rootpassword}}"

- name: "Add Header to 'my.cnf'" #?
  become: true
  ansible.builtin.lineinfile:
    insertbefore: "#"
    path: /etc/mysql/my.cnf
    line: "[mysqld]"
    search_string: "[mysqld]"

- name: "Add root user to 'my.cnf'"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mysql/my.cnf
    line: "user=root"
    search_string: "user=root"

- name: "Add root password to 'my.cnf'"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/mysql/my.cnf
    line: "password={{rootpassword}}"
    search_string: "password={{rootpassword}}"

- name: "Create zabbix DB"
  community.mysql.mysql_db:
    login_user: "root"
    login_password: "{{rootpassword}}"
    name: zabbix
    collation: utf8mb4_bin
    encoding: utf8mb4

- name: "Enable Zabbix log_bin_trust_function"
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 1
    login_user: root
    login_password: "{{rootpassword}}"

- name: "Create zabbix MySQL user"
  community.mysql.mysql_user:
    login_user: "root"
    login_password: "{{rootpassword}}"
    name: zabbix
    password: "{{zabbixpasswordsql}}"
    update_password: always
    priv:
      zabbix.*: ALL,GRANT
    state: present

- name: "Enable Zabbix log_bin_trust_function"
  community.mysql.mysql_variables:
    variable: log_bin_trust_function_creators
    value: 1
    login_user: root
    login_password: "{{rootpassword}}"

- name: Restore database
  community.mysql.mysql_db:
    name: zabbix
    login_user: zabbix
    login_password: "{{zabbixpasswordsql}}"
    collation: "utf8mb4_0900_ai_ci"
    state: import
    target: /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
    force: true

- name: "Configure Zabbix DB with a password in zabbix_server.conf"
  become: true
  ansible.builtin.lineinfile:
    insertafter: EOF
    path: /etc/zabbix/zabbix_server.conf
    line: "DBPassword={{zabbixpasswordsql}}"

- name: "Configure Zabbix conf file with DBHost"
  become: true
  ansible.builtin.lineinfile:
    insertafter: EOF
    path: /etc/zabbix/zabbix_server.conf
    line: DBHost=localhost

- name: "Configure Zabbix conf file comment socket dir"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    line: "#SocketDir=/run/zabbix"
    search_string: "SocketDir=/run/zabbix"

- name: "Restart zabbix services"
  become: true
  shell:
    cmd: "systemctl restart zabbix-server zabbix-agent apache2"

- name: "Enable zabbix services"
  become: true
  shell:
    cmd: "systemctl enable zabbix-server zabbix-agent apache2"
